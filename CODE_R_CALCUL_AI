#####
# Code pour faire AI jeu
#####
#Date 22 06 2024
# 1 #installation et modules ----

#install.packages("cowplot")

library(dplyr)
#install.packages("gganimate")
library(gganimate)
#install.packages("ggplot2")
library(ggplot2)
#install.packages('ggridges')
library(ggridges)
#install.packages("hablar")
library(hablar)
#install.packages("lubridate")
library(lubridate)
#install.packages("openxlsx")
library(openxlsx)
#install.packages("scales")
library(scales)
#install.packages('stringr')
library(stringr)
#install.packages("tidyr")
library(tidyr)
#install.packages("transformr")
library(transformr)
#install.packages("xlsx")  
library(xlsx)

# Le jeu -----
#2.1 Etablissement des tableaux  ---

# Surya Loka (Surya signifie "soleil" en sanskrit, Loka signifie "monde")
# Bulan Raya (Bulan signifie "lune" en malais/indonésien, Raya signifie "grande" ou "majestueuse")
# Angkasa Indah (Angkasa signifie "ciel" en malais/indonésien, Indah signifie "beau")
# Samudra Biru (Samudra signifie "océan" en sanskrit, Biru signifie "bleu" en malais/indonésien)
# Bintang Terang (Bintang signifie "étoile" en malais/indonésien, Terang signifie "brillant")
# Sangkhala (Un mot thaï qui signifie "temps" ou "éternité")
# Pulau Cahaya (Pulau signifie "île" en malais/indonésien, Cahaya signifie "lumière")
# Gunung Langit (Gunung signifie "montagne" en malais/indonésien, Langit signifie "ciel")
# Tanah Suci (Tanah signifie "terre" en malais/indonésien, Suci signifie "sacré")
# Mega Sutra (Mega signifie "nuage" en sanskrit, Sutra signifie "fil" ou "écriture sacrée")


Tableau_principal_10_province<-data.frame(
  Prov1_SuryaLoka = c("Colonisateur"),
  Prov2_BulanRaya = c("Colonisateur"),
  Prov3_AngkasaIndah = c("Colonisateur"),
  Prov4_BintangTerang = c("Colonisateur"),
  Prov5_SamudraBiru = c("Colonisateur"),
  Prov6_Sangkhala = c("Colonisateur"),
  Prov7_PulauCahaya = c("Colonisateur"),
  Prov8_GunungLangit = c("Colonisateur"),
  Prov9_TanahSuci = c("Colonisateur"),
  Prov10_MegaSutra = c("Colonisateur"), 
  Numero_action = c(0),
  Nomjoueur=c("Situation_initiale"),
  Actions= c("")
)


#Etablissement du tableau des ressources militaires

Tableau_Positions_troupes<-data.frame(
  index=c(1,2,3,4,5,6,7,8,9,10),
  Troupes_colonisateur = c("","","","","","","","","",""),
  Troupes_colonisé = c("","","","","","","","","","")
)

Tableau_nombredetroupes<-data.frame(
  Nbr_troupes_colonisateurs=c(0),
  Nbr_troupes_Colonise=c(0)
)


liste_province<-colnames(Tableau_principal_10_province)[1:10]
liste_province<-data.frame(nom=liste_province[1:10])

Tableau_types_actions<-data.frame(
  Prov1_SuryaLoka = c("vide"),
  Prov2_BulanRaya = c("vide"),
  Prov3_AngkasaIndah = c("vide"),
  Prov4_BintangTerang = c("vide"),
  Prov5_SamudraBiru = c("vide"),
  Prov6_Sangkhala = c("vide"),
  Prov7_PulauCahaya = c("vide"),
  Prov8_GunungLangit = c("vide"),
  Prov9_TanahSuci = c("vide"),
  Prov10_MegaSutra = c("vide"))

#création du tableau qui reprend chaque action actuellement sur la province
noms_colonnes<-colnames(Tableau_principal_10_province[1:10])
Tableau_types_actions <- setNames(data.frame(matrix(ncol = length(noms_colonnes), nrow = 1)), noms_colonnes)
# Remplir le dataframe avec la valeur "vide"
Tableau_types_actions[] <- "vide"
rm(noms_colonnes)


Tableau_troupe_non_deploye<-data.frame(
  Nbr_troupes_colonisateurs=c(0),
  Nbr_troupes_Colonise=c(0)
)


Resolution_bataille<-read.csv2("/Users/holly/Downloads/Resolution_bataille.csv", sep = ",")
#Resolution_bataille<-read.csv2("C:/Users/u99amo/Downloads/Resolution_bataille.csv", sep = ",", fileEncoding = "UTF-8")
Resolution_bataille<-Resolution_bataille%>%select(-Somme)
Resolution_bataille<-Resolution_bataille[-nrow(Resolution_bataille), ]

Liste_action_colonisateur <-c("Grand fort hérisson",
                              "Petit fort partout",
                              "Colonnes destructrice, search and destroy",
                              "Controle des campagnes et regroupement population",
                              "Terreur et bombardement")

Liste_action_colonise <-c("Guerrila de harcellement",
                          "Transport de troupes",
                          "Attaques urbaines",
                          "Attaque surprise de masse",
                          "Mobilisation population")


#2.2 Lancement du jeu 
# 9 province à joueur colonisateur et 1 province à joueur colonisé----
num_provinceducolonise<-sample(10,1)
Tableau_principal_10_province[1,num_provinceducolonise]<- "Colonisé"

#Une armée déja déployé du colonisé
Tableau_types_actions[1,num_provinceducolonise]<-"Guerrila de harcellement"
Tableau_Positions_troupes$Troupes_colonisé[1]<-liste_province$nom[num_provinceducolonise] 
num_position_troupe_colonisateur<-0 #nombre unité sur le terrain
num_position_troupe_colonise<-0#nombre unité sur le terrain

# Chaque camp reçoit 3 unités
Tableau_nombredetroupes$Nbr_troupes_colonisateurs[1]<-3
Tableau_nombredetroupes$Nbr_troupes_Colonise[1]<-3

#aucune n'est déployé 
Tableau_troupe_non_deploye$Nbr_troupes_colonisateurs[1]<-Tableau_nombredetroupes$Nbr_troupes_colonisateurs[1]
Tableau_troupe_non_deploye$Nbr_troupes_Colonise[1]<-Tableau_nombredetroupes$Nbr_troupes_Colonise[1]-1




for (i in seq(1, 200)){
  #Joueur colonisateur ET a des troupes et a des troupes deployables
  if (i %% 2 == 0) #joueur colonisateur)
  {
    print("joueur colonialiste joue")
    #tu choisis dans quel province tu va intervenir
    #tu ne peux mettres des troupes que si elle existe déja
    liste_province<-colnames(Tableau_principal_10_province)
    liste_province<-data.frame(nom=liste_province[1:10])
    liste_province<-liste_province%>%mutate(dejatroupe = if_else(nom%in%Tableau_Positions_troupes$Troupes_colonisateur,FALSE,TRUE))
    liste_province<-liste_province%>%filter(dejatroupe==TRUE)
    if(nrow(liste_province)==0 ) #Si tout les provinces sont occupés, alors tu gagnes
    {print ("Colonisateur a gagné")
    } else
    {
      num_province<-sample(nrow(liste_province),1)
      Province<-liste_province[num_province,1]
      num_province<-which(Province == colnames(Tableau_principal_10_province))
    }
    
    #tu choisis quel action tu va mener
    
    num_action_colonistaeur<-sample(5,1)
    action_colonisateur <-Liste_action_colonisateur[num_action_colonistaeur] 
    
    
    
    if(Tableau_nombredetroupes$Nbr_troupes_colonisateur>0) #Il reste des troupes en vie
    {
      print("il reste des troupes en vie")
      if(Tableau_troupe_non_deploye$Nbr_troupes_colonisateurs>0)
      {
        print("il reste des soldats dans les casernes à déployer")
        #on réduit le nombre de troupes à déployer de 1
        Tableau_troupe_non_deploye$Nbr_troupes_colonisateurs[1]<-Tableau_troupe_non_deploye$Nbr_troupes_colonisateurs[1]-1
        
        
        
        
      }else
      {
        print("il faut prendre des soldats déja déployé")
        #on choisit la province qui voit partir des troupes
        temp_DB<-Tableau_Positions_troupes%>%filter(Troupes_colonisateur !="")%>%select(Troupes_colonisateur)
        temp_chiffre<-sample(nrow(temp_DB),1)
        provincequidoitretirerlestroupes<-temp_DB[temp_chiffre,1]
        
        #on retire l'action de cette province
        temp_chiffre<-which(colnames(Tableau_types_actions) == provincequidoitretirerlestroupes)
        Tableau_types_actions[1,temp_chiffre]<-"vide" #les troupes sont retirés donc l'action sur cette province est vide
        #on retire la troupe de sa position
        temp_chiffre<- which(Tableau_Positions_troupes$Troupes_colonisateur == provincequidoitretirerlestroupes)
        Tableau_Positions_troupes$Troupes_colonisateur[temp_chiffre] <-""
        
        
        
      }
      
      
      #rajoute une ligne dans le tableau principal pour indiquer le vainqueur
      Tableau_principal_10_province<-
        rbind(Tableau_principal_10_province,
              Tableau_principal_10_province[nrow(Tableau_principal_10_province ),] )
      #Rajoute une chifre aà numéro action
      Tableau_principal_10_province$Numero_action[nrow(Tableau_principal_10_province)]<-(Tableau_principal_10_province$Numero_action[nrow(Tableau_principal_10_province)-1])+1 
      
      #Rajoute le nom du joueur dans le log
      Tableau_principal_10_province$Nomjoueur[nrow(Tableau_principal_10_province)]<-  "Colonisateur"
      
      #Rajoute actions
      Tableau_principal_10_province$Actions[nrow(Tableau_principal_10_province)]<-  paste("Colonisateur","-",action_colonisateur,"-", Province)
      # Tu places tes troupes
      num_position_troupe_colonisateur<-num_position_troupe_colonisateur+1
      
      #tu identife une place libre dans le tableau des positions des troupes 
      tempDB<-Tableau_Positions_troupes%>%filter(Troupes_colonisateur =="")
      Tableau_Positions_troupes<-Tableau_Positions_troupes%>%arrange(desc(Troupes_colonisateur))
      temp_chiffre<-nrow(tempDB)
      
      Tableau_Positions_troupes$Troupes_colonisateur[10-temp_chiffre+1]<-Province
      
      if(Tableau_types_actions[1,num_province]!="vide" )#Il y a des troupes ennemies sur cette province
      {
        
        
        
        #On trouve l'action de l'ennemi dans la province
        action_ennemis<-Tableau_types_actions[,num_province]
        Num_action_ennemis<- which(Liste_action_colonise == action_ennemis)
        x<-Resolution_bataille%>%filter(X==action_colonisateur)
        resultat_combat<-x[,Num_action_ennemis+2] #on rajoute 3 pour sauter les 3 premieres colonnes du tableau 
        
        
        if(resultat_combat ==1){
          #La province revient au colonisateur
          Tableau_principal_10_province[nrow(Tableau_principal_10_province),num_province]<-"Colonisateur"
          
          #RAjoute la derniere action dans la zprovince
          Tableau_types_actions[1,num_province]<- action_colonisateur
          
          print( paste("l'arméee colonisateur a gagné ",Province, "avec la méthode",action_colonisateur ))
        }
        if(resultat_combat ==0){
          #RAjoute la derniere action dans la zprovince
          Tableau_types_actions[1,num_province]<- action_colonisateur
          
          print(paste("Combats dans", Province, "avec la méthode",action_colonisateur))
        }
        if(resultat_combat ==-1){
          #l'armée est réduite de 1
          Tableau_nombredetroupes$Nbr_troupes_colonisateurs<-Tableau_nombredetroupes$Nbr_troupes_colonisateurs-1
          #La troupes disparait
          Tableau_Positions_troupes$Troupes_colonisateur[Tableau_Positions_troupes$Troupes_colonisateur ==Province] <-""
          
          print( paste("l'arméee colonisateur a perdu la ",Province, "avec la méthode",action_colonisateur, "l'armée est en deroute" ))
          
        }
        #1 victoire colonisateur
        #0 pas de victoire
        #-1 victoire colonisé
        
        
        
        
        
      }
      else{print("il n' y a pas de troupes ennemies dans cette province")}
      
      #La province revient au colonisateur
      Tableau_principal_10_province[nrow(Tableau_principal_10_province),num_province]<-"Colonisateur"
      
      #RAjoute la derniere action dans la zprovince
      Tableau_types_actions[1,num_province]<- action_colonisateur
      
      print( paste("l'arméee colonisateur a gagné ",Province, "avec la méthode",action_colonisateur, "sans combat" ))
      
    }else
    {print("il n'y  a plus de troupes en vie, la partie est perdue pour colonisateur")
    }
    
    
  }else
  {
    print("joueur colonise joue")
    #tu choisis dans quel province tu va intervenir
    #tu ne peux mettres des troupes que si elle existe déja
    
    liste_province<-colnames(Tableau_principal_10_province)
    liste_province<-data.frame(nom=liste_province[1:10])
    liste_province<-liste_province%>%mutate(dejatroupe = if_else(nom%in%Tableau_Positions_troupes$Troupes_colonisé ,FALSE,TRUE))
    liste_province<-liste_province%>%filter(dejatroupe==TRUE)
    if(nrow(liste_province)==0 ) #Si tout les provinces sont occupés, alors tu gagnes
    {print ("Colonisateur a gagné")
    } else
    {
      num_province<-sample(nrow(liste_province),1)
      Province<-liste_province[num_province,1]
      num_province<-which(Province == colnames(Tableau_principal_10_province))
    }
    
    #tu choisis quel action tu va mener
    
    num_action_colonise<-sample(5,1)
    action_colonise<-Liste_action_colonise[num_action_colonise] 
    
    
    
    if(Tableau_nombredetroupes$Nbr_troupes_Colonise>0) #Il reste des troupes en vie
    {
      print("il reste des troupes en vie")
      if(Tableau_troupe_non_deploye$Nbr_troupes_Colonise>0)
      {
        print("il reste des soldats dans les casernes à déployer")
        #on réduit le nombre de troupes à déployer de 1
        Tableau_troupe_non_deploye$Nbr_troupes_Colonise[1]<-Tableau_troupe_non_deploye$Nbr_troupes_Colonise[1]-1
        
        
        
        
      }else
      {
        print("il faut prendre des soldats déja déployé")
        #on choisit la province qui voit partir des troupes
        temp_DB<-Tableau_Positions_troupes%>%filter(Troupes_colonisé !="")%>%select(Troupes_colonisé)
        temp_chiffre<-sample(nrow(temp_DB),1)
        provincequidoitretirerlestroupes<-temp_DB[temp_chiffre,1]
        
        #on retire l'action de cette province
        temp_chiffre<-which(colnames(Tableau_types_actions) == provincequidoitretirerlestroupes)
        Tableau_types_actions[1,temp_chiffre]<-"vide" #les troupes sont retirés donc l'action sur cette province est vide
        #on retire la troupe de sa position
        temp_chiffre<- which(Tableau_Positions_troupes$Troupes_colonisé== provincequidoitretirerlestroupes)
        Tableau_Positions_troupes$Troupes_colonisé[temp_chiffre] <-""
        
        
        
      }
      
      
      #rajoute une ligne dans le tableau principal pour indiquer le vainqueur
      Tableau_principal_10_province<-
        rbind(Tableau_principal_10_province,
              Tableau_principal_10_province[nrow(Tableau_principal_10_province ),] )
      #Rajoute une chifre aà numéro action
      Tableau_principal_10_province$Numero_action[nrow(Tableau_principal_10_province)]<-(Tableau_principal_10_province$Numero_action[nrow(Tableau_principal_10_province)-1])+1 
      
      #Rajoute le nom du joueur dans le log
      Tableau_principal_10_province$Nomjoueur[nrow(Tableau_principal_10_province)]<-  "Colonisé"
      
      #Rajoute actions
      Tableau_principal_10_province$Actions[nrow(Tableau_principal_10_province)]<-  paste("Colonisé","-",action_colonise,"-", Province)
      # Tu places tes troupes
      num_position_troupe_colonise<-num_position_troupe_colonise+1
      
      #tu identife une place libre dans le tableau des positions des troupes 
      tempDB<-Tableau_Positions_troupes%>%filter(Troupes_colonisé =="")
      Tableau_Positions_troupes<-Tableau_Positions_troupes%>%arrange(desc(Troupes_colonisé))
      temp_chiffre<-nrow(tempDB)
      
      Tableau_Positions_troupes$Troupes_colonisé[10-temp_chiffre+1]<-Province
      
      if(Tableau_types_actions[1,num_province]!="vide" )#Il y a des troupes ennemies sur cette province
      {
        
        
        
        #On trouve l'action de l'ennemi dans la province
        action_ennemis<-Tableau_types_actions[,num_province]
        Num_action_ennemis<- which(Liste_action_colonisateur == action_ennemis)
        x<-Resolution_bataille%>%filter(X==action_ennemis)
        resultat_combat<-x[,num_action_colonise +2] #on rajoute 3 pour sauter les 3 premieres colonnes du tableau 
        
        
        if(resultat_combat ==1){
          #La province revient au colonisateur
          Tableau_principal_10_province[nrow(Tableau_principal_10_province),num_province]<-"Colonisé"
          
          #RAjoute la derniere action dans la zprovince
          Tableau_types_actions[1,num_province]<- action_colonise
          
          print( paste("l'arméee colonisé a gagné ",Province, "avec la méthode",action_colonise))
        }
        if(resultat_combat ==0){
          #RAjoute la derniere action dans la zprovince
          Tableau_types_actions[1,num_province]<- action_colonise
          
          print(paste("Combats dans", Province, "avec la méthode",action_colonise))
        }
        if(resultat_combat ==-1){
          #l'armée est réduite de 1
          Tableau_nombredetroupes$Nbr_troupes_Colonise<-Tableau_nombredetroupes$Nbr_troupes_Colonise-1
          #La troupes disparait
          Tableau_Positions_troupes$Troupes_colonisé[Tableau_Positions_troupes$Troupes_colonisé ==Province] <-""
          
          print( paste("l'arméee colonisé a perdu la ",Province, "avec la méthode",action_colonise, "l'armée est en deroute" ))
          
        }
        #1 victoire colonisateur
        #0 pas de victoire
        #-1 victoire colonisé
        
        
        
        
        
      }
      else{print("il n' y a pas de troupes ennemies dans cette province")}
      
      #La province revient au colonisé
      Tableau_principal_10_province[nrow(Tableau_principal_10_province),num_province]<-"Colonisé"
      
      #RAjoute la derniere action dans la zprovince
      Tableau_types_actions[1,num_province]<- action_colonise
      
      print( paste("l'arméee colonisé a gagné ",Province, "avec la méthode",action_colonise, "sans combat" ))
      
    }else
    {print("il n'y  a plus de troupes en vie, la partie est perdue pour colonisé ... pour l'instant")
    }
    
    
  }
}
#stavaza actuellement le jeu ne peut pas se terminer car la seule condition c'est d'avoir des troupes partout, il faut donc en rajouter ou rajouter une condition pour dire que toute les troupes sont détruirtes    
# bug quand deux armees sur la meme province  
  
  
