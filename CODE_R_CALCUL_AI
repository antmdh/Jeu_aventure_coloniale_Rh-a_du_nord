#####
# Code pour faire AI jeu
#####
#Date 24 06 2024
# version reecrite ar chat GPT
# 1 #installation et modules ----

#install.packages("cowplot")

library(dplyr)
#install.packages("gganimate")
library(gganimate)
#install.packages("ggplot2")
library(ggplot2)
#install.packages('ggridges')
library(ggridges)
#install.packages("hablar")
library(hablar)
#install.packages("lubridate")
library(lubridate)
#install.packages("openxlsx")
library(openxlsx)
#install.packages("scales")
library(scales)
#install.packages('stringr')
library(stringr)
#install.packages("tidyr")
library(tidyr)
#install.packages("transformr")
library(transformr)
#install.packages("xlsx")  
library(xlsx)

# Le jeu -----
#2.1 Etablissement des tableaux  ---

# Surya Loka (Surya signifie "soleil" en sanskrit, Loka signifie "monde")
# Bulan Raya (Bulan signifie "lune" en malais/indonésien, Raya signifie "grande" ou "majestueuse")
# Angkasa Indah (Angkasa signifie "ciel" en malais/indonésien, Indah signifie "beau")
# Samudra Biru (Samudra signifie "océan" en sanskrit, Biru signifie "bleu" en malais/indonésien)
# Bintang Terang (Bintang signifie "étoile" en malais/indonésien, Terang signifie "brillant")
# Sangkhala (Un mot thaï qui signifie "temps" ou "éternité")
# Pulau Cahaya (Pulau signifie "île" en malais/indonésien, Cahaya signifie "lumière")
# Gunung Langit (Gunung signifie "montagne" en malais/indonésien, Langit signifie "ciel")
# Tanah Suci (Tanah signifie "terre" en malais/indonésien, Suci signifie "sacré")
# Mega Sutra (Mega signifie "nuage" en sanskrit, Sutra signifie "fil" ou "écriture sacrée")


Tableau_principal_10_province<-data.frame(
  Prov1_SuryaLoka = c("Colonisateur"),
  Prov2_BulanRaya = c("Colonisateur"),
  Prov3_AngkasaIndah = c("Colonisateur"),
  Prov4_BintangTerang = c("Colonisateur"),
  Prov5_SamudraBiru = c("Colonisateur"),
  Prov6_Sangkhala = c("Colonisateur"),
  Prov7_PulauCahaya = c("Colonisateur"),
  Prov8_GunungLangit = c("Colonisateur"),
  Prov9_TanahSuci = c("Colonisateur"),
  Prov10_MegaSutra = c("Colonisateur"), 
  Numero_action = c(0),
  Nomjoueur=c("Situation_initiale"),
  Actions= c("")
)


#Etablissement du tableau des ressources militaires

Tableau_Positions_troupes<-data.frame(
  index=c(1,2,3,4,5,6,7,8,9,10),
  Troupes_colonisateur = c("","","","","","","","","",""),
  Troupes_colonisé = c("","","","","","","","","","")
)

Tableau_nombredetroupes<-data.frame(
  Nbr_troupes_colonisateurs=c(0),
  Nbr_troupes_Colonise=c(0)
)


liste_province<-colnames(Tableau_principal_10_province)[1:10]
liste_province<-data.frame(nom=liste_province[1:10])

Tableau_types_actions<-data.frame(
  Prov1_SuryaLoka = c("vide"),
  Prov2_BulanRaya = c("vide"),
  Prov3_AngkasaIndah = c("vide"),
  Prov4_BintangTerang = c("vide"),
  Prov5_SamudraBiru = c("vide"),
  Prov6_Sangkhala = c("vide"),
  Prov7_PulauCahaya = c("vide"),
  Prov8_GunungLangit = c("vide"),
  Prov9_TanahSuci = c("vide"),
  Prov10_MegaSutra = c("vide"))

#création du tableau qui reprend chaque action actuellement sur la province
noms_colonnes<-colnames(Tableau_principal_10_province[1:10])
Tableau_types_actions <- setNames(data.frame(matrix(ncol = length(noms_colonnes), nrow = 1)), noms_colonnes)
# Remplir le dataframe avec la valeur "vide"
Tableau_types_actions[] <- "vide"
rm(noms_colonnes)


Tableau_troupe_non_deploye<-data.frame(
  Nbr_troupes_colonisateurs=c(0),
  Nbr_troupes_Colonise=c(0)
)


#Resolution_bataille<-read.csv2("/Users/holly/Downloads/Resolution_bataille.csv", sep = ",")
Resolution_bataille<-read.csv2("C:/Users/u99amo/Downloads/Resolution_bataille.csv", sep = ",", fileEncoding = "UTF-8")
Resolution_bataille<-Resolution_bataille%>%select(-Somme)
Resolution_bataille<-Resolution_bataille[-nrow(Resolution_bataille), ]

Liste_action_colonisateur <-c("Grand fort hérisson",
                              "Petit fort partout",
                              "Colonnes destructrice, search and destroy",
                              "Controle des campagnes et regroupement population",
                              "Terreur et bombardement")

Liste_action_colonise <-c("Guerrila de harcellement",
                          "Transport de troupes",
                          "Attaques urbaines",
                          "Attaque surprise de masse",
                          "Mobilisation population")


#2.2 Lancement du jeu 
# 9 province à joueur colonisateur et 1 province à joueur colonisé----
num_provinceducolonise<-sample(10,1)
Tableau_principal_10_province[1,num_provinceducolonise]<- "Colonisé"

#Une armée déja déployé du colonisé
Tableau_types_actions[1,num_provinceducolonise]<-"Guerrila de harcellement"
Tableau_Positions_troupes$Troupes_colonisé[1]<-liste_province$nom[num_provinceducolonise] 
num_position_troupe_colonisateur<-0 #nombre unité sur le terrain
num_position_troupe_colonise<-0#nombre unité sur le terrain

# Chaque camp reçoit 3 unités
Tableau_nombredetroupes$Nbr_troupes_colonisateurs[1]<-3
Tableau_nombredetroupes$Nbr_troupes_Colonise[1]<-3

#aucune n'est déployé 
Tableau_troupe_non_deploye$Nbr_troupes_colonisateurs[1]<-Tableau_nombredetroupes$Nbr_troupes_colonisateurs[1]
Tableau_troupe_non_deploye$Nbr_troupes_Colonise[1]<-Tableau_nombredetroupes$Nbr_troupes_Colonise[1]-1

Tableau_principal_10_province<-Tableau_principal_10_province%>%mutate(fichier = now())
Tableau_principal_10_province_tous<-Tableau_principal_10_province

#Boucle qui joue toute les batailles
i<-1
for (i in seq(1, 200)) {
  
  #i<-2
  #3.1 tour du joueur colonialiste
  if (i %% 2 == 0) {
    print("joueur colonialiste joue")
    
    #3.1.1 On regarde les provinces où il ''y a pas encore de soldat à nous 
    liste_province <- colnames(Tableau_principal_10_province)
    liste_province <- data.frame(nom = liste_province[1:10])
    liste_province <- liste_province %>% mutate(dejatroupe = if_else(nom %in% Tableau_Positions_troupes$Troupes_colonisateur, FALSE, TRUE))
    liste_province <- liste_province %>% filter(dejatroupe == TRUE)
  }
  
  #3.1.2 Si il n'y a pas de provinces sans troupes à nous, alors la partie est gagné pour le colonisateur
  
  if ((i %% 2 == 0) & (nrow(liste_province) == 0)) {
    print("Colonisateur a gagné")
  }
  
  # On choisit une province
  # Bug pour les colons, on devrait donner un avantage aux provinces proche de la cote, des grandes villes proche dnune province qu'on occupe deja.
  
  if ((i %% 2 == 0) & (nrow(liste_province) != 0)) {
    num_province <- sample(nrow(liste_province), 1)
    Province <- liste_province[num_province, 1]
    num_province <- which(Province == colnames(Tableau_principal_10_province))
  }
  
  #3.1.3 Le colonisateur choisit une action qu'on va mener, on devrait choisir une action en fonction de l'historique et du cout de chaque action
  if (i %% 2 == 0) {
    num_action_colonistaeur <- sample(5, 1)
    action_colonisateur <- Liste_action_colonisateur[num_action_colonistaeur]
  }
  
  #3.1.4 le colonisateur verifie si il a des troupes
  
  if ((i %% 2 == 0) & (Tableau_nombredetroupes$Nbr_troupes_colonisateur > 0)) {
    print("il reste des troupes en vie")
  }
  
  if ((i %% 2 == 0) & (Tableau_nombredetroupes$Nbr_troupes_colonisateur > 0) & (Tableau_troupe_non_deploye$Nbr_troupes_colonisateurs > 0)) {
    print("il reste des soldats dans les casernes à déployer")
    Tableau_troupe_non_deploye$Nbr_troupes_colonisateurs[1] <- Tableau_troupe_non_deploye$Nbr_troupes_colonisateurs[1] - 1
  }
  
  if ((i %% 2 == 0) & (Tableau_nombredetroupes$Nbr_troupes_colonisateur > 0) & (Tableau_troupe_non_deploye$Nbr_troupes_colonisateurs <= 0)) {
    print("il faut prendre des soldats déjà déployés")
    temp_DB <- Tableau_Positions_troupes %>% filter(Troupes_colonisateur != "") %>% select(Troupes_colonisateur)
    temp_chiffre <- sample(nrow(temp_DB), 1)
    provincequidoitretirerlestroupes <- temp_DB[temp_chiffre, 1]
    temp_chiffre <- which(colnames(Tableau_types_actions) == provincequidoitretirerlestroupes)
    Tableau_types_actions[1, temp_chiffre] <- "vide"
    temp_chiffre <- which(Tableau_Positions_troupes$Troupes_colonisateur == provincequidoitretirerlestroupes)
    Tableau_Positions_troupes$Troupes_colonisateur[temp_chiffre] <- ""
  }
  
  if ((i %% 2 == 0) & (Tableau_nombredetroupes$Nbr_troupes_colonisateur > 0)) {
    Tableau_principal_10_province <- rbind(Tableau_principal_10_province, Tableau_principal_10_province[nrow(Tableau_principal_10_province),])
    Tableau_principal_10_province$Numero_action[nrow(Tableau_principal_10_province)] <- Tableau_principal_10_province$Numero_action[nrow(Tableau_principal_10_province) - 1] + 1
    Tableau_principal_10_province$Nomjoueur[nrow(Tableau_principal_10_province)] <- "Colonisateur"
    Tableau_principal_10_province$Actions[nrow(Tableau_principal_10_province)] <- paste("Colonisateur", "-", action_colonisateur, "-", Province)
    num_position_troupe_colonisateur <- num_position_troupe_colonisateur + 1

    
    tempDB <- Tableau_Positions_troupes %>% filter(Troupes_colonisateur == "")
    Tableau_Positions_troupes <- Tableau_Positions_troupes %>% arrange(desc(Troupes_colonisateur))
    temp_chiffre <- nrow(tempDB)
    Tableau_Positions_troupes$Troupes_colonisateur[10 - temp_chiffre + 1] <- Province
  }
  
  if ((i %% 2 == 0) & (Tableau_types_actions[1, num_province] != "vide")) {
    action_ennemis <- Tableau_types_actions[, num_province]
    Num_action_ennemis <- which(Liste_action_colonise == action_ennemis)
    x <- Resolution_bataille %>% filter(X == action_colonisateur)
    resultat_combat <- x[, Num_action_ennemis + 2]
    
    if (resultat_combat == 1) {
      Tableau_principal_10_province[nrow(Tableau_principal_10_province), num_province] <- "Colonisateur"
      Tableau_types_actions[1, num_province] <- action_colonisateur
      print(paste("l'armée colonisateur a gagné", Province, "avec la méthode", action_colonisateur))
    }
    
    if (resultat_combat == 0) {
      Tableau_types_actions[1, num_province] <- action_colonisateur
      print(paste("Combats dans", Province, "avec la méthode", action_colonisateur))
    }
    
    if (resultat_combat == -1) {
      Tableau_nombredetroupes$Nbr_troupes_colonisateurs <- Tableau_nombredetroupes$Nbr_troupes_colonisateurs - 1
      Tableau_Positions_troupes$Troupes_colonisateur[Tableau_Positions_troupes$Troupes_colonisateur == Province] <- ""
      print(paste("l'armée colonisateur a perdu la", Province, "avec la méthode", action_colonisateur, "l'armée est en déroute"))
    }
  }
  
  if ((i %% 2 == 0) & (Tableau_types_actions[1, num_province] == "vide")) {
    print("il n'y a pas de troupes ennemies dans cette province")
    Tableau_principal_10_province[nrow(Tableau_principal_10_province), num_province] <- "Colonisateur"
    Tableau_types_actions[1, num_province] <- action_colonisateur
    print(paste("l'armée colonisateur a gagné", Province, "avec la méthode", action_colonisateur, "sans combat"))
  }
  
  #i<-1
  
  if ((i %% 2 != 0)) {
    print("joueur colonisé joue")
    
    liste_province <- colnames(Tableau_principal_10_province)
    liste_province <- data.frame(nom = liste_province[1:10])
    liste_province <- liste_province %>% mutate(dejatroupe = if_else(nom %in% Tableau_Positions_troupes$Troupes_colonisé, FALSE, TRUE))
    liste_province <- liste_province %>% filter(dejatroupe == TRUE)
  }
  
  if ((i %% 2 != 0) & (nrow(liste_province) == 0)) {
    print("Colonisateur a gagné")
  }
  
  if ((i %% 2 != 0) & (nrow(liste_province) != 0)) {
    num_province <- sample(nrow(liste_province), 1)
    Province <- liste_province[num_province, 1]
    num_province <- which(Province == colnames(Tableau_principal_10_province))
  }
  
  if ((i %% 2 != 0)) {
    num_action_colonise <- sample(5, 1)
    action_colonise <- Liste_action_colonise[num_action_colonise]
  }
  
  if ((i %% 2 != 0) & (Tableau_nombredetroupes$Nbr_troupes_Colonise > 0)) {
    print("il reste des troupes en vie")
  }
  
  if ((i %% 2 != 0) & (Tableau_nombredetroupes$Nbr_troupes_Colonise > 0) & (Tableau_troupe_non_deploye$Nbr_troupes_Colonise > 0)) {
    print("il reste des soldats dans les casernes à déployer")
    Tableau_troupe_non_deploye$Nbr_troupes_Colonise[1] <- Tableau_troupe_non_deploye$Nbr_troupes_Colonise[1] - 1
  }
  
  if ((i %% 2 != 0) & (Tableau_nombredetroupes$Nbr_troupes_Colonise > 0) & (Tableau_troupe_non_deploye$Nbr_troupes_Colonise <= 0)) {
    print("il faut prendre des soldats déjà déployés")
    temp_DB <- Tableau_Positions_troupes %>% filter(Troupes_colonisé != "") %>% select(Troupes_colonisé)
    temp_chiffre <- sample(nrow(temp_DB), 1)
    provincequidoitretirerlestroupes <- temp_DB[temp_chiffre, 1]
    temp_chiffre <- which(colnames(Tableau_types_actions) == provincequidoitretirerlestroupes)
    Tableau_types_actions[1, temp_chiffre] <- "vide"
    temp_chiffre <- which(Tableau_Positions_troupes$Troupes_colonisé == provincequidoitretirerlestroupes)
    Tableau_Positions_troupes$Troupes_colonisé[temp_chiffre] <- ""
  }
  
  if ((i %% 2 != 0) & (Tableau_nombredetroupes$Nbr_troupes_Colonise > 0)) {
    Tableau_principal_10_province <- rbind(Tableau_principal_10_province, Tableau_principal_10_province[nrow(Tableau_principal_10_province),])
    Tableau_principal_10_province$Numero_action[nrow(Tableau_principal_10_province)] <- Tableau_principal_10_province$Numero_action[nrow(Tableau_principal_10_province) - 1] + 1
    Tableau_principal_10_province$Nomjoueur[nrow(Tableau_principal_10_province)] <- "Colonisé"
    Tableau_principal_10_province$Actions[nrow(Tableau_principal_10_province)] <- paste("Colonisé", "-", action_colonise, "-", Province)
    num_position_troupe_colonise <- num_position_troupe_colonise + 1

    
    
    tempDB <- Tableau_Positions_troupes %>% filter(Troupes_colonisé == "")
    Tableau_Positions_troupes <- Tableau_Positions_troupes %>% arrange(desc(Troupes_colonisé))
    temp_chiffre <- nrow(tempDB)
    Tableau_Positions_troupes$Troupes_colonisé[10 - temp_chiffre + 1] <- Province
  }
  
  if ((i %% 2 != 0) & (Tableau_types_actions[1, num_province] != "vide")) {
    action_ennemis <- Tableau_types_actions[, num_province]
    Num_action_ennemis <- which(Liste_action_colonisateur == action_ennemis)
    x <- Resolution_bataille %>% filter(X == action_ennemis)
    resultat_combat <- x[, num_action_colonise + 2]
    
    if (resultat_combat == 1) {
      Tableau_principal_10_province[nrow(Tableau_principal_10_province), num_province] <- "Colonisé"
      Tableau_types_actions[1, num_province] <- action_colonise
      print(paste("l'armée colonisé a gagné", Province, "avec la méthode", action_colonise))
    }
    
    if (resultat_combat == 0) {
      Tableau_types_actions[1, num_province] <- action_colonise
      print(paste("Combats dans", Province, "avec la méthode", action_colonise))
    }
    
    if (resultat_combat == -1) {
      Tableau_nombredetroupes$Nbr_troupes_Colonise <- Tableau_nombredetroupes$Nbr_troupes_Colonise - 1
      Tableau_Positions_troupes$Troupes_colonisé[Tableau_Positions_troupes$Troupes_colonisé == Province] <- ""
      print(paste("l'armée colonisé a perdu la", Province, "avec la méthode", action_colonise, "l'armée est en déroute"))
    }
  }
  
  if ((i %% 2 != 0) & (Tableau_types_actions[1, num_province] == "vide")) {
    print("il n'y a pas de troupes ennemies dans cette province")
    Tableau_principal_10_province[nrow(Tableau_principal_10_province), num_province] <- "Colonisé"
    Tableau_types_actions[1, num_province] <- action_colonise
    print(paste("l'armée colonisé a gagné", Province, "avec la méthode", action_colonise, "sans combat"))
  }
}

#stavaza actuellement le jeu ne peut pas se terminer car la seule condition c'est d'avoir des troupes partout, il faut donc en rajouter ou rajouter une condition pour dire que toute les troupes sont détruirtes    
# bug quand deux armees sur la meme province
#Sauvegarde des données



Tableau_principal_10_province_tous<-rbind(Tableau_principal_10_province_tous,Tableau_principal_10_province)
Tableau_principal_10_province_tous<-Tableau_principal_10_province_tous%>%distinct(.keep_all = fichier)
#write.csv2(Tableau_principal_10_province_tous,file = "/Users/holly/Downloads/enregistrement_AI.csv")
write.csv2(Tableau_principal_10_province_tous,file = "C:/Users/u99amo/Downloads/enregistrement_AI.csv")

#stavaza actuellement le jeu ne peut pas se terminer car la seule condition c'est d'avoir des troupes partout, il faut donc en rajouter ou rajouter une condition pour dire que toute les troupes sont détruirtes    
# bug quand deux armees sur la meme province  


#stavaza actuellement le jeu ne peut pas se terminer car la seule condition c'est d'avoir des troupes partout, il faut donc en rajouter ou rajouter une condition pour dire que toute les troupes sont détruirtes    
# bug quand deux armees sur la meme province  


