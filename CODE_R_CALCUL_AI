#####
# Code pour faire AI jeu
#####
#Date 27 06 2024
# bug principal : des actions de colonisateurs apparaissent dans le tableau types actions 
#1. #installation et modules ----

#install.packages("cowplot")

library(dplyr)
#install.packages("gganimate")
library(gganimate)
#install.packages("ggplot2")
library(ggplot2)
#install.packages('ggridges')
library(ggridges)
#install.packages("hablar")
library(hablar)
#install.packages("lubridate")
library(lubridate)
#install.packages("openxlsx")
library(openxlsx)
#install.packages("scales")
library(scales)
#install.packages('stringr')
library(stringr)
#install.packages("tidyr")
library(tidyr)
#install.packages("transformr")
library(transformr)
#install.packages("xlsx")  
library(xlsx)


#les regles du jeu
#chaque joueur a des armées et les place sur différentes provinces
#celui qui controle toute les provinces a gagné (suprématie) 
#celui qui n'a plus de troupe a perdu (manque de ressource)

#Si une armée occupe un territoire et que l'autre envois son armée, il y a une bataille résolu par une matrice de chance. L'équipe qui perd est détruite
#certaines provinces avantage certaines stratégies de l'un ou de l'autre

#Une province peut appartenir à un des deux camps meme si il n' plus d'armée dessus c'est le cas quand on déplace une troupe vers une autre

#plus une armée est sur une province, plus elle est forte

#plus le colonisé a de  province, plus il recoit de troupes
#plus le colonisé a de provinces frontalieres, plus il recoit de truoupes

#plus le temps passe, moins les colonisés recoivent de renfort
#plus il a des provinces riches, plus il recoit de troupes


# Le jeu -----
#2. Etablissement des tableaux  ----

# Surya Loka (Surya signifie "soleil" en sanskrit, Loka signifie "monde")
# Bulan Raya (Bulan signifie "lune" en malais/indonésien, Raya signifie "grande" ou "majestueuse")
# Angkasa Indah (Angkasa signifie "ciel" en malais/indonésien, Indah signifie "beau")
# Samudra Biru (Samudra signifie "océan" en sanskrit, Biru signifie "bleu" en malais/indonésien)
# Bintang Terang (Bintang signifie "étoile" en malais/indonésien, Terang signifie "brillant")
# Sangkhala (Un mot thaï qui signifie "temps" ou "éternité")
# Pulau Cahaya (Pulau signifie "île" en malais/indonésien, Cahaya signifie "lumière")
# Gunung Langit (Gunung signifie "montagne" en malais/indonésien, Langit signifie "ciel")
# Tanah Suci (Tanah signifie "terre" en malais/indonésien, Suci signifie "sacré")
# Mega Sutra (Mega signifie "nuage" en sanskrit, Sutra signifie "fil" ou "écriture sacrée")


Tableau_principal_10_province<-data.frame(
  Prov1_SuryaLoka = c("Colonisateur"),
  Prov2_BulanRaya = c("Colonisateur"),
  Prov3_AngkasaIndah = c("Colonisateur"),
  Prov4_BintangTerang = c("Colonisateur"),
  Prov5_SamudraBiru = c("Colonisateur"),
  Prov6_Sangkhala = c("Colonisateur"),
  Prov7_PulauCahaya = c("Colonisateur"),
  Prov8_GunungLangit = c("Colonisateur"),
  Prov9_TanahSuci = c("Colonisateur"),
  Prov10_MegaSutra = c("Colonisateur"), 
  Numero_action = c(0),
  Nomjoueur=c("Situation_initiale"),
  Actions= c("")
)


#Etablissement du tableau des ressources militaires

Tableau_Positions_troupes<-data.frame(
  index=c(1,2,3,4,5,6,7,8,9,10),
  Troupes_colonisateur = c("","","","","","","","","",""),
  Troupes_colonisé = c("","","","","","","","","","")
)
#Etablissement du tableau du nombre de troupes

Tableau_nombredetroupes<-data.frame(
  Nbr_troupes_colonisateurs=c(0),
  Nbr_troupes_Colonise=c(0)
)


liste_province_TOTAL<-colnames(Tableau_principal_10_province)[1:10]
liste_province_TOTAL<-data.frame(nom=liste_province_TOTAL[1:10])

#Etablissement du tableau type action qui indique l'activité qui se passe dans cette provinceà ce moment là

# Tableau_types_actions<-data.frame(
#   Prov1_SuryaLoka = c("vide"),
#   Prov2_BulanRaya = c("vide"),
#   Prov3_AngkasaIndah = c("vide"),
#   Prov4_BintangTerang = c("vide"),
#   Prov5_SamudraBiru = c("vide"),
#   Prov6_Sangkhala = c("vide"),
#   Prov7_PulauCahaya = c("vide"),
#   Prov8_GunungLangit = c("vide"),
#   Prov9_TanahSuci = c("vide"),
#   Prov10_MegaSutra = c("vide")) #creation du tableau à l'ancienne

#création du tableau qui reprend chaque action actuellement sur la province
noms_colonnes<-colnames(Tableau_principal_10_province[1:10])
Tableau_types_actions <- setNames(data.frame(matrix(ncol = length(noms_colonnes), nrow = 1)), noms_colonnes)
# Remplir le dataframe avec la valeur "vide"
Tableau_types_actions[] <- "vide"
rm(noms_colonnes)

# tableau qui indique les troupes casernés 
Tableau_troupe_non_deploye<-data.frame(
  Nbr_troupes_colonisateurs=c(0),
  Nbr_troupes_Colonise=c(0)
)

# importation de la matrice pour determiner le resultat pour chaue type de bataille

#Resolution_bataille<-read.csv2("/Users/holly/Downloads/Resolution_bataille.csv", sep = ",")
# Resolution_bataille<-read.csv2("C:/Users/u99amo/Downloads/Resolution_bataille.csv", sep = ",", fileEncoding = "UTF-8")
# Resolution_bataille<-Resolution_bataille%>%select(-Somme)
# Resolution_bataille<-Resolution_bataille[-nrow(Resolution_bataille), ]

Resolution_bataille<- data.frame(
  X=c("Guerrila.de.harcellement","Transport.de.troupes","Attaques_urbaines","Attaque_surprise.de.masse","Mobilisation.population"),
  Grand.fort.herisson=c(0,1,0,-1,0),
  Petit.fort.partout=c(-1,1,0,0,0),
  Colonnes.destructrice.search.and.destroy=c(1,0,1,-1,-1),
  Controle.des.campagnes.et.regroupement.population=c(1,1,-1,-1,0),
  Terreur.et.bombardement=c(0,0,0,1,-1)
)
# x les actions du colonisé nom des colonnes actions du colonisateurs
#Point négatif pour colonisé, positif pour colonisateur



Liste_action_colonisateur <-colnames(Resolution_bataille)[2:6]


Liste_action_colonise <-Resolution_bataille$X


#3. Lancement du jeu -----
# 9 province pour joueur colonisateur et 1 province pour joueur colonisé
num_provinceducoloniseaudebut<-sample(10,1)
Tableau_principal_10_province[1,num_provinceducoloniseaudebut]<- "Colonisé"

#Une armée déja déployé du colonisé
Tableau_types_actions[1,num_provinceducoloniseaudebut]<-Liste_action_colonise[1]    #"Guerrila de harcellement"
Tableau_Positions_troupes$Troupes_colonisé[1]<-liste_province_TOTAL$nom[num_provinceducoloniseaudebut] 
# num_position_troupe_colonisateur<-0 #nombre unité sur le terrain
# num_position_troupe_colonise<-1#nombre unité sur le terrain

# Chaque camp reçoit 3 unités
Tableau_nombredetroupes$Nbr_troupes_colonisateurs[1]<-3
Tableau_nombredetroupes$Nbr_troupes_Colonise[1]<-3

#aucune n'est déployé sauf une des colonisé
Tableau_troupe_non_deploye$Nbr_troupes_colonisateurs[1]<-Tableau_nombredetroupes$Nbr_troupes_colonisateurs[1]
Tableau_troupe_non_deploye$Nbr_troupes_Colonise[1]<-Tableau_nombredetroupes$Nbr_troupes_Colonise[1]-1

#preparation du fichier de sauvegarde
Tableau_principal_10_province<-Tableau_principal_10_province%>%mutate(fichier = now())
Tableau_principal_10_province_tous<-Tableau_principal_10_province

#4. La réalisation des X parties  -----
#Boucle qui joue toute les batailles
# c'est le colonisateur qui commence puisque le colonisé a deja un troupe sur le terrain

derniernumero<-200
for (i in seq(2, derniernumero)) {
  
  #i<-2
  #4.1 tour du joueur colonialiste----
  #4.1.1 On regarde les provinces où il ''y a pas encore de soldat à nous 
  if (i %% 2 == 0) {
    liste_province_colonisateur <- colnames(Tableau_principal_10_province)
    liste_province_colonisateur <- data.frame(nom = liste_province_colonisateur[1:10])
    liste_province_colonisateur <- liste_province_colonisateur %>% mutate(dejatroupe = if_else(nom %in% Tableau_Positions_troupes$Troupes_colonisateur, FALSE, TRUE))
    liste_province_colonisateur <- liste_province_colonisateur %>% filter(dejatroupe == TRUE)
    print(paste("joueur colonialiste joue partie",i))
  }
  
  
  #4.1.2 Si il n'y a pas de provinces sans troupes à nous, alors la partie est gagné pour le colonisateur
  if ((i %% 2 == 0) & (nrow(liste_province_colonisateur) == 0)) {
    i<-derniernumero+1
    print("Colonisateur a gagné")
  }
  
  
  #4.1.3 Le colonisateur choisit une province où attaquer et l'action qui va etre mené
  if (i %% 2 == 0) {
    if (nrow(liste_province_colonisateur) != 0) {
      choixprovincesanstroupecolonisateur <- sample(nrow(liste_province_colonisateur), 1)
      Province <- liste_province_colonisateur[choixprovincesanstroupecolonisateur, 1]
      num_province <- which(Province == colnames(Tableau_principal_10_province))
      print(paste("Colonisateur choisit province",Province))
      num_action_colonistaeur <- sample(5, 1)
      action_colonisateur <- Liste_action_colonisateur[num_action_colonistaeur]
      print(paste("Colonisateur choisit action",action_colonisateur))
    
  }}
  
  
  
  #4.1.4 le colonisateur verifie si il a des troupes sinon il a perdu
  if ((i %% 2 == 0) & (Tableau_nombredetroupes$Nbr_troupes_colonisateur <= 0)){
    print("Vous n'avez plus de troupe, la partie est perdue pour le colonisateur")
    i<-derniernumero+1
  }
  if ((i %% 2 == 0) & (Tableau_nombredetroupes$Nbr_troupes_colonisateur > 0)){
    print("il reste des troupes en vie pour le colonisateur")
  }
  
  
  #4.1.5 Le colonisateur verifie si il a des troupes en caserne et les prends
  if ((i %% 2 == 0) & (Tableau_nombredetroupes$Nbr_troupes_colonisateur > 0) & (Tableau_troupe_non_deploye$Nbr_troupes_colonisateurs > 0)) {
    Tableau_troupe_non_deploye$Nbr_troupes_colonisateurs[1] <- Tableau_troupe_non_deploye$Nbr_troupes_colonisateurs[1] - 1
    print("il reste des soldats dans les casernes à déployer")
  }
  
  #4.1.6 Le colonisateur prend des troupes sur le terrain
  if ((i %% 2 == 0) & (Tableau_nombredetroupes$Nbr_troupes_colonisateur > 0) & (Tableau_troupe_non_deploye$Nbr_troupes_colonisateurs <= 0)) {
    
    #choisis des troupes déja déployé
    temp_DB_colonisateur <- Tableau_Positions_troupes %>% filter(Troupes_colonisateur != "") %>% select(Troupes_colonisateur)
    temp_chiffre_colonisateur1 <- sample(nrow(temp_DB_colonisateur), 1)
    provincequidoitretirerlestroupes_colonisateur <- temp_DB_colonisateur[temp_chiffre_colonisateur1, 1]
    #actions effacé de la province
    temp_chiffre_colonisateur2 <- which(colnames(Tableau_types_actions) == provincequidoitretirerlestroupes_colonisateur)
    Tableau_types_actions[1, temp_chiffre_colonisateur2] <- "vide"
    #troupes effacé de la province
    temp_chiffre_colonisateur3 <- which(Tableau_Positions_troupes$Troupes_colonisateur == provincequidoitretirerlestroupes_colonisateur)
    Tableau_Positions_troupes$Troupes_colonisateur[temp_chiffre_colonisateur3] <- ""
    print("il faut prendre des soldats déjà déployés")
    print(paste("les troupes de",provincequidoitretirerlestroupes_colonisateur, "sont reprises vers un autre champ de bataille"))
  }
  #4.1.7 Le colonisateur attaque
  
  if ((i %% 2 == 0) & (Tableau_nombredetroupes$Nbr_troupes_colonisateur > 0)) {
    #On rajoute une ligne au tableau principale qui etudie le suivi identique a a dernière
    Tableau_principal_10_province <- rbind(Tableau_principal_10_province, Tableau_principal_10_province[nrow(Tableau_principal_10_province),])
    #On rajute le numero du tour
    Tableau_principal_10_province$Numero_action[nrow(Tableau_principal_10_province)] <- Tableau_principal_10_province$Numero_action[nrow(Tableau_principal_10_province) - 1] + 1
    #On rajute que le colonisateur joue
    Tableau_principal_10_province$Nomjoueur[nrow(Tableau_principal_10_province)] <- "Colonisateur"
    #On rajoutel'action entreprise
    Tableau_principal_10_province$Actions[nrow(Tableau_principal_10_province)] <- paste("Colonisateur", "-", action_colonisateur, "-", Province)
    # num_position_troupe_colonisateur <- num_position_troupe_colonisateur + 1
    print(paste("Colonisateur", "mene", action_colonisateur, " dans", Province))
    
    #on rajoute troupes dans le tableau position troupes
    tempDB <- Tableau_Positions_troupes %>% filter(Troupes_colonisateur == "")
    Tableau_Positions_troupes <- Tableau_Positions_troupes %>% arrange(desc(Troupes_colonisateur))
    temp_chiffre4 <- nrow(tempDB)
    Tableau_Positions_troupes$Troupes_colonisateur[10 - temp_chiffre4 + 1] <- Province
    print("la province attaqué est indiqué dans le tableau position troupe")
  }
  
  #4.1.8 Si il y a des actions ennemis ennemis sur la province
  
  if ((i %% 2 == 0) & (Tableau_types_actions[1, num_province] != "vide") & (i<derniernumero)) {
    print("on recherche l'action de l'ennemi")
    action_ennemis <- Tableau_types_actions[, num_province]
    print(paste("ennemi applique la politique ",action_ennemis ))
    Num_action_ennemis <- which(Liste_action_colonise == action_ennemis)
    x <- Resolution_bataille[[action_colonisateur]] 
    resultat_combat <- x[ Num_action_ennemis ]
    print(paste("le resultat du combat est ",resultat_combat ))
    
    if (resultat_combat == 1) {
      #la province passe sous controle du colonisateur
      Tableau_principal_10_province[nrow(Tableau_principal_10_province), num_province] <- "Colonisateur"
      Tableau_types_actions[1, num_province] <- action_colonisateur
      print(paste("l'armée colonisateur a gagné", Province, "avec la méthode", action_colonisateur))
      #l'armée du colonisé est détruite
      Tableau_Positions_troupes$Troupes_colonisé[      Tableau_Positions_troupes$Troupes_colonisé==Province]<-""
      Tableau_nombredetroupes$Nbr_troupes_Colonise<- Tableau_nombredetroupes$Nbr_troupes_Colonise - 1
      
    }
    
    if (resultat_combat == 0) {
      # Tableau_types_actions[1, num_province] <- action_colonisateur
      print(paste("Combats dans", Province, "avec la méthode", action_colonisateur))
    }
    
    if (resultat_combat == -1) {
      Tableau_nombredetroupes$Nbr_troupes_colonisateurs <- Tableau_nombredetroupes$Nbr_troupes_colonisateurs - 1
      Tableau_Positions_troupes$Troupes_colonisateur[Tableau_Positions_troupes$Troupes_colonisateur == Province] <- ""
      print(paste("l'armée colonisateur a perdu la bataille dans ", Province, "avec la méthode", action_colonisateur, "l'armée est en déroute"))
    }
  }
  
  if ((i %% 2 == 0) & (Tableau_types_actions[1, num_province] == "vide")) {
    print("il n'y a pas de troupes ennemies dans cette province")
    Tableau_principal_10_province[nrow(Tableau_principal_10_province), num_province] <- "Colonisateur"
    Tableau_types_actions[1, num_province] <- action_colonisateur
    print(paste("l'armée colonisateur a gagné", Province, "avec la méthode", action_colonisateur, "sans combat"))
  }
  
  
  
  
  #4.2 tour du joueur colonisé  ----
  #4.2.1 On regarde les provinces où il ''y a pas encore de soldat à nous 
  if ((i %% 2 != 0)) {
    liste_province_colonise <- colnames(Tableau_principal_10_province)
    liste_province_colonise <- data.frame(nom = liste_province_colonise[1:10])
    liste_province_colonise <- liste_province_colonise %>% mutate(dejatroupe = if_else(nom %in% Tableau_Positions_troupes$Troupes_colonisé, FALSE, TRUE))
    liste_province_colonise <- liste_province_colonise %>% filter(dejatroupe == TRUE)
    print(paste("joueur colonisé joue partie",i))
    
  }
  #4.2.2 Si il n'y a pas de provinces sans troupes à nous, alors la partie est gagné pour le colonisateur
  if (i %% 2 != 0)  {
    if((nrow(liste_province_colonise) == 0)){
    print("Colonisateur a gagné")
    i<-derniernumero+1
  }}
  
  #4.2.3 Le colonisateur choisit une province où attaquer et l'action qui va etre mené
  if (i %% 2 != 0)  {
      if (nrow(liste_province_colonise) != 0){
        choixprovincesanstroupecolonise <- sample(nrow(liste_province_colonisateur), 1)
        Province <- liste_province_colonise[choixprovincesanstroupecolonise, 1]
        num_province <- which(Province == colnames(Tableau_principal_10_province))
        print(paste("Colonisé choisit province",Province))
        num_action_colonise <- sample(5, 1)
        action_colonise <- Liste_action_colonise[num_action_colonise]
        print(paste("Colonisé choisit action",action_colonise))
      }}
  
  #4.2.4 le colonisateur verifie si il a des troupes sinon il a perdu
  if ((i %% 2 != 0) & (Tableau_nombredetroupes$Nbr_troupes_Colonise <= 0)){
    print("Vous n'avez plus de troupe, la partie est perdue pour le colonisé")
    i<-derniernumero+1
  }  
  
  if ((i %% 2 != 0) & (Tableau_nombredetroupes$Nbr_troupes_Colonise > 0)){
    print("il reste des troupes en vie pour le colonisé")
  }
  
  
  #4.2.5 Le colonisé verifie si il a des troupes en caserne
  if ((i %% 2 != 0) & (Tableau_nombredetroupes$Nbr_troupes_Colonise > 0) & (Tableau_troupe_non_deploye$Nbr_troupes_Colonise > 0)) {
    Tableau_troupe_non_deploye$Nbr_troupes_Colonise[1] <- Tableau_troupe_non_deploye$Nbr_troupes_Colonise[1] - 1
    print("il reste des soldats dans les casernes à déployer")
  }
  
  
  
  #4.2.6 Le colonisé prend des troupes sur le terrain
  if ((i %% 2 != 0) & (Tableau_nombredetroupes$Nbr_troupes_Colonise > 0) & (Tableau_troupe_non_deploye$Nbr_troupes_Colonise <= 0)) {
    
    temp_DB_colonise <- Tableau_Positions_troupes %>% filter(Troupes_colonisé != "") %>% select(Troupes_colonisé)
    temp_chiffre_colonise1 <- sample(nrow(temp_DB_colonise), 1)
    provincequidoitretirerlestroupes_colonise <- temp_DB_colonise[temp_chiffre_colonise1, 1]
    temp_chiffre_colonise2 <- which(colnames(Tableau_types_actions) == provincequidoitretirerlestroupes_colonise)
    Tableau_types_actions[1, temp_chiffre_colonise2] <- "vide"
    temp_chiffre_colonise3 <- which(Tableau_Positions_troupes$Troupes_colonisé == provincequidoitretirerlestroupes_colonise)
    Tableau_Positions_troupes$Troupes_colonisé[temp_chiffre_colonise3] <- ""
    print("il faut prendre des soldats déjà déployés")
    print(paste("les troupes de",provincequidoitretirerlestroupes_colonise, "sont reprises vers un autre champ de bataille"))
  }
  
  
  #4.2.7 Le colonisé en action sur le terrain
  
  if ((i %% 2 != 0) & (Tableau_nombredetroupes$Nbr_troupes_Colonise > 0)) {
    #On rajoute une ligne au tableau principale qui etudie le suivi identique a a dernière
    Tableau_principal_10_province <- rbind(Tableau_principal_10_province, Tableau_principal_10_province[nrow(Tableau_principal_10_province),])
    #On rajute le numero du tour
    Tableau_principal_10_province$Numero_action[nrow(Tableau_principal_10_province)] <- Tableau_principal_10_province$Numero_action[nrow(Tableau_principal_10_province) - 1] + 1
    #On rajute que le colonisé joue
    Tableau_principal_10_province$Nomjoueur[nrow(Tableau_principal_10_province)] <- "Colonisé"
    #On rajoutel'action entreprise
    Tableau_principal_10_province$Actions[nrow(Tableau_principal_10_province)] <- paste("Colonisé", "-", action_colonise, "-", Province)
    #num_position_troupe_colonise <- num_position_troupe_colonise + 1
    print(paste("Colonisé", "mene", action_colonise, " dans", Province))
    
    
    #on rajoute troupes dans le tableau position troupes
    tempDB <- Tableau_Positions_troupes %>% filter(Troupes_colonisé == "")
    Tableau_Positions_troupes <- Tableau_Positions_troupes %>% arrange(desc(Troupes_colonisé))
    temp_chiffre4 <- nrow(tempDB)
    Tableau_Positions_troupes$Troupes_colonisé[10 - temp_chiffre4 + 1] <- Province
    print("la province attaqué est indiqué dans le tableau position troupe")
    
  }
  
  
  #4.2.8 Si il y a des actions ennemis ennemis sur la province
  if ((i %% 2 != 0) & (Tableau_types_actions[1, num_province] != "vide") & (i<derniernumero)) {
    action_ennemis <- Tableau_types_actions[, num_province]
    Num_action_ennemis <- which(Liste_action_colonisateur == action_ennemis)
    
    
    x <- Resolution_bataille[[action_ennemis]] 
    resultat_combat <- x[num_action_colonise]
    
    if (resultat_combat == 1) {
      Tableau_principal_10_province[nrow(Tableau_principal_10_province), num_province] <- "Colonisé"
      Tableau_types_actions[1, num_province] <- action_colonise
      print(paste("l'armée colonisé a gagné", Province, "avec la méthode", action_colonise))
      #l'armée du colonisateur est détruite
      Tableau_Positions_troupes$Troupes_colonisateur[      Tableau_Positions_troupes$Troupes_colonisateur==Province]<-""
      Tableau_nombredetroupes$Nbr_troupes_colonisateurs<- Tableau_nombredetroupes$Nbr_troupes_colonisateurs - 1
      
    }
    
    if (resultat_combat == 0) {
      # Tableau_types_actions[1, num_province] <- action_colonise
      print(paste("Combats dans", Province, "avec la méthode", action_colonise))
    }
    
    if (resultat_combat == -1) {
      Tableau_nombredetroupes$Nbr_troupes_Colonise <- Tableau_nombredetroupes$Nbr_troupes_Colonise - 1
      Tableau_Positions_troupes$Troupes_colonisé[Tableau_Positions_troupes$Troupes_colonisé == Province] <- ""
      print(paste("l'armée colonisé a perdu la", Province, "avec la méthode", action_colonise, "l'armée est en déroute"))
    }
  }
  
  if ((i %% 2 != 0) & (Tableau_types_actions[1, num_province] == "vide")) {
    print("il n'y a pas de troupes ennemies dans cette province")
    Tableau_principal_10_province[nrow(Tableau_principal_10_province), num_province] <- "Colonisé"
    Tableau_types_actions[1, num_province] <- action_colonise
    print(paste("l'armée colonisé a gagné", Province, "avec la méthode", action_colonise, "sans combat"))
  }
  
  #write.csv2(Tableau_types_actions,file = paste0("C:/Users/u99amo/Downloads/enregistrement_tableau-types-actions",i,".csv"))
  write.csv2(Tableau_types_actions,file = paste0("/Users/holly/Downloads/log/enregistrement_tableau-types-actions",i,".csv"))
  
}

#stavaza actuellement le jeu ne peut pas se terminer car la seule condition c'est d'avoir des troupes partout, il faut donc en rajouter ou rajouter une condition pour dire que toute les troupes sont détruirtes    
# bug quand deux armees sur la meme province
#Sauvegarde des données

#5. Sauvegarde du jeu ----

Tableau_principal_10_province_tous<-rbind(Tableau_principal_10_province_tous,Tableau_principal_10_province)
Tableau_principal_10_province_tous<-Tableau_principal_10_province_tous%>%distinct(.keep_all = fichier)
write.csv2(Tableau_principal_10_province_tous,file = "/Users/holly/Downloads/enregistrement_AI.csv")
#write.csv2(Tableau_principal_10_province_tous,file = "C:/Users/u99amo/Downloads/enregistrement_AI.csv")


#5. Commentaires ----
#stavaza actuellement le jeu ne peut pas se terminer car la seule condition c'est d'avoir des troupes partout, il faut donc en rajouter ou rajouter une condition pour dire que toute les troupes sont détruirtes    
# bug quand deux armees sur la meme province  


#stavaza actuellement le jeu ne peut pas se terminer car la seule condition c'est d'avoir des troupes partout, il faut donc en rajouter ou rajouter une condition pour dire que toute les troupes sont détruirtes    
# bug quand deux armees sur la meme province  

#je dois verifier pourquoi des provinces restent avec une politique militaire alors qu'il y a pluys d'armée

# On choisit une province
# Bug pour les colons, on devrait donner un avantage aux provinces proche de la cote, des grandes villes proche dnune province qu'on occupe deja.
#bug il devrait choisir une province ou il y a des troupes ennemies pour essayer de les buter ou bien de grandes ressources qu'il veut garder

#L'action aléatoir  pour l'instant aléatoire maison devrait choisir une action en fonction de l'historique et du cout de chaque action
